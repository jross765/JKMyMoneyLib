// $Header: svn://gila_svn_priv/finanzen/KMyMoneyToolsXML/trunk/KMyMoneyToolsXML/src/main/java/de/riegelmuenchen/kmymoney/tools/xml/gen/GenTrx.java 8590 2024-02-16 08:43:48Z thilo $

package org.example.kmymoneyapi.write;

import java.io.File;
import java.time.LocalDate;
import java.time.LocalDateTime;

import org.kmymoney.api.basetypes.simple.KMMAcctID;
import org.kmymoney.api.basetypes.simple.KMMPyeID;
import org.kmymoney.api.numbers.FixedPointNumber;
import org.kmymoney.api.write.KMyMoneyWritableTransaction;
import org.kmymoney.api.write.KMyMoneyWritableTransactionSplit;
import org.kmymoney.api.write.impl.KMyMoneyWritableFileImpl;

public class GenTrx {
    // BEGIN Example data -- adapt to your needs
    private static String kmmInFileName  = "example_in.kmy";
    private static String kmmOutFileName = "example_out.xml";
    
    private static KMMAcctID        fromAcctID  = new KMMAcctID("A000066"); // sic, not KMMComplAcctID
    private static KMMAcctID        toAcctID    = new KMMAcctID("A000010"); // dto.
    private static KMMPyeID         pyeID       = new KMMPyeID("P000007");  // optional, may be null
    private static FixedPointNumber amount      = new FixedPointNumber("1234/10");
    private static FixedPointNumber quantity    = amount;
    private static LocalDate        datePosted  = LocalDate.of(2024, 2, 15);
    private static String           description = "Bla-bla";
    // END Example data

    // -----------------------------------------------------------------

    public static void main(String[] args) {
	try {
	    GenTrx tool = new GenTrx();
	    tool.kernel();
	} catch (Exception exc) {
	    System.err.println("Execution exception. Aborting.");
	    exc.printStackTrace();
	    System.exit(1);
	}
    }

    protected void kernel() throws Exception {
	KMyMoneyWritableFileImpl kmmFile = new KMyMoneyWritableFileImpl(new File(kmmInFileName));

	System.err.println("Account name (from): '" + kmmFile.getAccountByID(fromAcctID).getQualifiedName() + "'");
	System.err.println("Account name (to):   '" + kmmFile.getAccountByID(toAcctID).getQualifiedName() + "'");

	// ---

	KMyMoneyWritableTransaction trx = kmmFile.createWritableTransaction();
	// Does not work like that: The description/memo on transaction
	// level is purely internal:
	// trx.setDescription(description);
	trx.setDescription("Generated by GenTrx, " + LocalDateTime.now());

	// ---

	KMyMoneyWritableTransactionSplit split1 = trx.createWritableSplit(kmmFile.getAccountByID(fromAcctID));
	split1.setValue(new FixedPointNumber(amount.negate()));
	split1.setShares(new FixedPointNumber(quantity.negate()));

	if (pyeID != null)
	    split1.setPayeeID(pyeID);

	// This is what we actually want (cf. above):
	split1.setDescription(description);

	// ---

	KMyMoneyWritableTransactionSplit split2 = trx.createWritableSplit(kmmFile.getAccountByID(toAcctID));
	split2.setValue(new FixedPointNumber(amount));
	split2.setShares(new FixedPointNumber(quantity));

	if (pyeID != null)
	    split2.setPayeeID(pyeID);

	// Cf. above
	split2.setDescription(description);

	// ---

	trx.setDatePosted(datePosted);
	trx.setDateEntered(LocalDate.now());

	// ---

	System.out.println("Transaction to write: " + trx.toString());
	kmmFile.writeFile(new File(kmmOutFileName));
	System.out.println("OK");
    }

}
